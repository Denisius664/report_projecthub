= ПОСТАНОВКА ЗАДАЧИ

== ФОРМАЛЬНАЯ ФОРМУЛИРОВКА ЗАДАЧИ

Разработать веб-приложение "ProjectHub" - централизованную систему хранения и управления студенческими проектами, обеспечивающую консолидацию, обработку и анализ исследовательских работ в различных форматах, с реализацией механизмов контроля доступа, поиска.

== ОСНОВНЫЕ ТРЕБОВАНИЯ К СИСТЕМЕ

Были сформированы следующие функциональные требования:

- Возможность загрузки файлов проекта любых форматов.
- Настройка параметров проекта: название, описание, теги, предметная область.
- Управление участниками и назначение ролей.
- Поддержка ссылок на другие проекты для указания заимствованных или связанных наработок.
- Настройки приватности (публичные и приватные проекты, публичные и приватные файлы).
- Поиск и фильтрация по метаданным: название, описание, теги, предметная область.
- Автоматическое извлечение метаданных файлов, включая размер, MIME-тип, дату создания.
- Централизованный доступ.

А также нефункциональные требования:

- Использовать в проекте только открытые технологии.
- По минимуму собирать и хранить персональные данные.
- Относительная легкость внедрения и использования.
- Стандартизация хранения.
- Стиль веб-клиента должен быть схож с общим стилем внутренних ресурсов ТюмГУ.

Все требования были разделены на группы по степени важности:

#figure(table(
  columns: (2.5cm, 8cm),
  align: (center, left),
  stroke: .5pt,
  table.header(
    [Приоритет],
    align(center)[Требования]
  ),
  
  table.hline(),
  [Высокие], [
    - Загрузка файлов разных типов.
    - Настройка проекта.
    - Управление участниками.
    - Поиск.
    - Приватность.
    - Стандартизация хранения.
    - Централизованный доступ.
    - Минимальный сбор персональных данных.
    - Использование только открытых технологий.
  ],
  
  table.hline(),
  [Средние], [
    - Ссылки на другие проекты.
    - Фильтрация.
    - Относительная легкость внедрения и использования.
  ],
  
  table.hline(),
  [Низкие], [
    - Стиль веб-клиента должен быть схож с общим стилем внутренних ресурсов ТюмГУ.
  ],
), caption: [Приоритеты требований к системе])

Также была построены функциональные схемы веб-приложения (@fig:idef0, @fig:idef0_1).

#figure(
  image("../images/idef0.png", width: 90%),
  caption: "Схема A-0 (контекстная диаграмма)"
) <fig:idef0>
#figure(
  image("../images/idef0_1.png", width: 90%),
  caption: "Схема A0 (первый уровень)"
) <fig:idef0_1>
== ОГРАНИЧЕНИЯ И ДОПУЩЕНИЯ

Требования к составу и параметрам технических средств:

Программное обеспечение должно функционировать на IBM-совместимых персональных компьютерах.

Минимальная конфигурация технических средств:

- Тип процессора: Intel Core i5 или выше.
- Объем ОЗУ: 16 Гб.
- Объем свободного дискового пространства: 100 Гб.
- Операционная система: Windows 10, 11, Linux GNU.

Данные требования обусловлены несколькими факторами:

- Расчет на небольшое количество проектов в системе, в связи с этим, будет достаточно средней производительности современных ПК (Intel Core i5 и 16 Гб ОЗУ) для стабильной работы программного обеспечения без избыточных затрат на более мощное оборудование.
- Отсутствие поддержки macOS. В проекте предусмотрена работа только на IBM-совместимых персональных компьютерах с Windows и Linux, что связано с ограничениями по доступу к аппаратуре Apple и необходимостью унификации среды.

Требования к информационной и программной совместимости:

- Программное обеспечение должно работать под управлением операционных систем семейства Windows, Linux.
- Поддержка современных веб-браузеров (Google Chrome, Firefox).
- Максимальный размер файлов одного проекта: 1 ГБ.

== ОЖИДАЕМЫЕ РЕЗУЛЬТАТЫ

Веб-приложение ProjectHub, включающее:

- Серверную часть на FastAPI с полным REST API.
- Клиентскую часть на Vue 3 с интерфейсом для мониторов.
- Базу данных PostgreSQL с оптимизированной схемой.
- Интеграцию с MinIO для хранения файлов.

Оно должно соответствовать всем функциональным критериям:

- Реализованы все заявленные функции управления проектами и файлами.
- Обеспечена корректная работа системы ролей и прав доступа.
- Реализован полнофункциональный поиск и фильтрации.

Реализация проекта должна привести к следующим качественным улучшениям:

- Централизация хранения студенческих проектов.
- Упрощение доступа к исследовательским материалам.
- Повышение прозрачности и доступности студенческих работ.