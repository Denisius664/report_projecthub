= Представление проекта
== Скриншоты интерфейса
#figure(image("../images/homepage.png"), caption: [Домащнаяя страница]) <fig:homepage>
#figure(image("../images/homepage_filters.png"), caption: [Фильтрация проектов на домащнаей странице]) <fig:homepage_filters>
#figure(image("../images/project.png"), caption: [Страница проекта часть 1]) <fig:project>
#figure(image("../images/project2.png"), caption: [Страница проекта часть 2]) <fig:project2>
#figure(image("../images/project_settings.png"), caption: [Страница настроек проекта часть 1]) <fig:project_settings>
#figure(image("../images/project_settings2.png"), caption: [Страница настроек проекта часть 2]) <fig:project_settings2>
#figure(image("../images/project_create.png"), caption: [Страница создания проекта]) <fig:project_create>
#figure(image("../images/profile.png"), caption: [Страница профиля пользователя]) <fig:profile>
#figure(image("../images/login.png"), caption: [Страница входа в учетную запись]) <fig:login>

== Пояснение к каждому ключевому экрану / модулю
=== Домашняя страница

Домашняя страница системы ProjectHub (@fig:homepage), представляет собой центральный интерфейс для работы с проектами и служит точкой входа для пользователя. Она обеспечивает быстрый доступ к списку проектов, а также гибкие инструменты для поиска и фильтрации.

Основные элементы страницы:
+ Поисковая панель
 - В верхней части страницы размещено поле поиска, позволяющее пользователю выполнять текстовый поиск по названию и ключевым словам проекта. Дополнительно доступна кнопка вызова панели фильтров.

+ Фильтры (@fig:homepage_filters)
 - Панель фильтров открывается во всплывающем диалоговом окне и включает:
 - выбор статуса проекта (в работе, приостановлен, завершен);
 - выбор предметной области;
 - переключатель «только публичные проекты»;
 - ввод произвольных тегов для уточнения поиска.
+ Список проектов
 - Основная часть страницы содержит список карточек проектов. Каждая карточка отображает краткую информацию: название, статус, описание, теги, предметную область, количество участников, индекс цитирования и связанные проекты. Это позволяет пользователю быстро оценить ключевые характеристики.
 - Если проекты загружены — они выводятся в виде списка карточек.
 - Если результаты отсутствуют — пользователю отображается сообщение «Проекты не найдены».

=== Страница проекта
Страница проекта (@fig:project, @fig:project2) - это страница, где собрана вся ключевая информация о выбранном проекте. Здесь можно не только прочитать описание и увидеть основные характеристики, но и работать с файлами, участниками команды и связями с другими проектами.

Основные элементы страницы:
+ Основная информация — название проекта, дата создания, теги и предметная область.
+ Описание — текстовое поле с содержанием или указанием, что описание отсутствует.
+ Файлы проекта — возможность загружать новые материалы, просматривать список уже добавленных, скачивать или удалять их, а также видеть уровень доступа (публичный/приватный).
+ Участники — список всех пользователей с их ролями. Есть возможность приглашать новых участников, менять роли или удалять из проекта (в зависимости от прав).
+ Связанные проекты — перечень проектов, связанных с текущим, с возможностью добавлять новые связи или удалять существующие.

=== Страница настроект проекта
На странице настроек проекта (@fig:project_settings, @fig:project_settings2) пользователь может изменять ключевую информацию о проекте, задавать его статус, добавлять описание и теги, а также управлять доступностью проекта. Все изменения можно сохранить или отменить, а результат действий отображается с помощью уведомлений.

Основные возможности страницы:
+ Навигация — кнопка для возврата обратно на страницу проекта.
+ Заголовок — отображается название проекта вместе с пометкой «Настройки проекта».
+ Редактирование информации:
 - название проекта;
 - описание;
 - статус (в работе, приостановлен, завершен);
 - список тегов;
 - переключатель публичности проекта (доступен всем или ограничен).
+ Управление изменениями:
 - кнопка «Сохранить» становится доступна только при наличии изменений;
 - кнопка «Отмена» возвращает к странице проекта без сохранения.

=== Страница профиля пользователя
На странице профиля (@fig:profile) пользователь видит свои данные: имя, электронную почту, роль в системе, дату регистрации, а также аватар. Она объединяет ключевую информацию в одном месте, позволяя быстро ознакомиться с учетной записью.

Основные элементы страницы:
+ Аватар — изображение профиля. Если пользователь не загрузил собственное фото, показывается стандартная заглушка.
+ Имя и электронная почта — главные данные, отображаемые в верхней части профиля.
+ Роль — показывает, какие права или уровень доступа имеет пользователь.
+ Дата регистрации — указывает, когда был создан аккаунт.

=== Страница входа в учетную запись
Страница входа (@fig:login) предлагает пользователю ввести свои учетные данные — логин и пароль. После успешной авторизации он получает доступ к основным функциям системы.

Основные элементы страницы:
+ Поле для ввода логина (email учетной записи).
+ Поле для ввода пароля (скрывается при вводе).
+ Кнопка входа — запускает проверку введённых данных и выполняет вход.

== Примеры сценариев использования
1. Создание и загрузка нового проекта студентом:
    - Студент регистрируется или авторизуется в системе (через корпоративную почту ТюмГУ).
    - Создаёт новый проект, указывая название, описание, теги, предметную область.
    - Настраивает приватность (публичный или приватный проект, видимость файлов и участников).
    - Загружает файлы в допустимых форматах (текст, PDF, Word, Excel, JSON), с проверкой размера (до 1 ГБ).
    - Добавляет участников, назначает роли (например, куратор, участник).
2. Поиск и анализ существующих проектов:
    - Пользователь (студент или преподаватель) выполняет поиск по метаданным: название, теги, дата создания, описание, предметная область.
    - Фильтрует результаты, просматривает метаданные и файлы (таблицы и документы прямо на платформе, другие файлы скачиваются).
    - Добавляет ссылку на найденный проект в свой собственный для цитирования или повторного использования данных.
    - Куратор редактирует метаданные или управляет правами доступа.
3. Сотрудничество в команде:
    - Участники приглашаются в проект, им назначаются роли.
    - Команда работает над файлами: загружает код, документы, данные.
    - Просмотр истории изменений, управление приватными файлами (видны только участникам).
    - Выход студента из проекта или удаление участника.
4. Администрирование и безопасность:
    - Куратор или админ управляет правами доступа, проверяет загруженные файлы на соответствие форматам.
    - Автоматическая загрузка данных из систем вуза.
    - Тестирование: функциональное (проверка поиска, загрузки), нагрузочное (обработка множественных запросов) и пользовательское.
5. Анализ и обработка данных:
    - Студент присоединяется к существующему проекту, ищет данные в хранилище вместо сбора заново.
    - Использование ссылок на другие проекты для повышения цитируемости.
    - Преподаватель анализирует студенческие работы по тематике, без поиска в локальных хранилищах.

Эти сценарии направлены на решение проблемы децентрализованного хранения проектов, упрощение доступа и сотрудничество в ТюмГУ, кафедра ПО.
== Результаты работы моделей, алгоритмов, сценариев
В документе модели машинного обучения или сложные алгоритмы не используются и не описаны (проект фокусируется на веб-приложении для хранения данных без элементов ИИ). Результаты работы сценариев также не приведены в форме тестовых выводов или метрик. Однако упоминаются ожидаемые результаты от реализации системы в целом, основанные на цели проекта: снижение рутинной работы, повышение цитируемости чужих работ за счет удобного поиска и анализа данных до 28 мая (вероятно, дедлайн). Конкретные количественные результаты (например, от тестирования) отсутствуют.

К общим результатам, указанным в документе, можно отнести:

- Разработанный интерфейс для загрузки, поиска и фильтрации проектов.
- Серверная часть с REST API, управлением правами доступа и валидацией данных.
- Обеспечение отказоустойчивости (резервное копирование), защиты данных (шифрование, JWT-аутентификация).
- Поддержка форматов файлов и интеграция с PostgreSQL (для метаданных) и MinIO (для хранения файлов).

Поскольку конкретных результатов работы моделей, алгоритмов или сценариев (в смысле execution outputs) в документе нет, раздел остается преимущественно пустым, с указанием на отсутствие детализированных данных.