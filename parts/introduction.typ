= Введение
На данный момент в начале работы над проектами студенты часто вынуждены заниматься сбором данных, которые были неоднократно получены до этого в других проектах в нашем ВУЗе, из-за этого сложнее сконцентрироваться на действительно важных задачах. Также, если студенты присоединяются к работе над уже существующими проектами, преподаватели вынуждены искать их на локальных хранилищах.
Можно выделить следующую проблему: студенческие проекты хранятся в разных местах (личных хранилищах преподавателей и физических копиях), что затрудняет доступ студентов к информации, поиск проектов по тематике и эффективный сбор и анализ данных из распределенных источников.
Цель проекта: разработать веб-приложение для хранения, обработки и анализа данных студенческих IT проектов в различных форматах, которое снизит количество рутинной работы и повысить цитируемость (ссылки на чужие работы) чужих работ за счет удобного поиска.
+ Анализ требований:
 - Определить ключевые функции и возможности.
+ Проектирование архитектуры:
 - Разработать архитектуру многослойного хранилища данных.
 - Определить технологии и инструменты, которые будут использоваться для разработки.
+ Разработка серверной части приложения:
 - Разработать API для хранения и получения данных с сервера.
 - Подключить приложение к базе данных.
 - Обеспечить возможность загрузки файлов проектов в различных форматах.
 - Разработать меры по защите данных, включая аутентификацию пользователей и контроль доступа.
+ Разработка интерфейса пользователя:
 - Создать прототип веб-интерфейса, который будет удобным и интуитивно понятным для пользователей.
 - Реализовать функции поиска, фильтрации.
+ Тестирование системы:
 - Провести функциональное, нагрузочное тестирования.
 - Провести пользовательское тестирование.

Далее в таблице представлен краткий анализ аналогов веб-приложения.
#figure(
  table(
    columns: (1.5fr, 1fr, 1fr, 1fr, 1fr),
    table.header[Функциональность][Физические накопители][Облачные хранилища][Репозитории научных работ][Внутренние решения вузов],
    [Централизованный доступ],[Нет],[Да (ограничен правами доступа)],[Да],[Да (зависит от реализации)],
    [Самообслуживание студентов (поиск, загрузка, просмотр)],[Нет],[Да (вручную через интерфейс хранилища)],[Нет],[Да (редко реализуется)],
    [Поддержка метаданных (тема, автор, руководитель и т.д.)],[Нет],[Нет],[Да],[Да (при ручной настройке)],
  ),
  caption: [Сравнительная таблица аналогов]
)
Анализ аналогов позволил выявить как базовые возможности (загрузка, хранение, получение файлов), так и существующие ограничения: отсутствие командной работы, ограниченная фильтрация и поиск, низкий стандарт безопасности.